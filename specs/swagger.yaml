openapi: 3.0.0
info:
  description: "API Backend Dart"
  version: "1.0.11"
  title: "Semanda do Backend"
servers:
  - url: http://localhost:4467
    description: Local server
tags:
- name: "auth"
  description: "Access to Auth"
- name: "user"
  description: "Access to User"

paths:
  /auth/login:
    get:
      tags:
        - 'auth'
      summary: login with credentials(email/password)
      security:
        - basicAuth : []
      responses:
        '200':
          description: 'success get user'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tokenization'
        '403':
          description: 'error connection'
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/BackendException'
        '404':
          description: 'error connection'
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/BackendException'
  /auth/check_token:
    get:
      tags:
        - 'auth'
      summary: check bearer token
      security:
        - bearerAuth : []
      responses:
        '200':
          description: 'success get user'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
        '403':
          description: 'error connection'
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/BackendException'
        '404':
          description: 'error connection'
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/BackendException'
  /auth/refresh_token:
    get:
      tags:
        - 'auth'
      summary: refresh bearer token
      security:
        - bearerRefreshAuth : []
      responses:
        '200':
          description: 'success get user'
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Tokenization'
        '403':
          description: 'error connection'
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/BackendException'
        '404':
          description: 'error connection'
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/BackendException'
  /auth/update_password:
    put:
      tags:
        - 'auth'
      summary: update password
      security:
        - bearerAuth : []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password: 
                  type: string
                newPassword:
                  type: string
      responses:
        '200':
          description: 'success update password'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '403':
          description: 'error connection'
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/BackendException'
        '404':
          description: 'error connection'
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/BackendException'
  /user/{id}:
    get:
      tags:
        - 'user'
      summary: get user by id
      security:
        - bearerAuth : []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'success get user'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      
        '400':
          description: 'error connection'
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/BackendException'
    delete:
      tags:
        - 'user'
      summary: delete user by id
      security:
        - bearerAuth : []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'success delete user'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      
        '400':
          description: 'error connection'
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/BackendException'
  /user:
    get:
      tags:
        - 'user'
      summary: get all user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 'success get users'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      
        '400':
          description: 'error connection'
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/BackendException'
    post:
      tags:
        - 'user'
      summary: create new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '200':
          description: 'success create user'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      
        '400':
          description: 'error connection'
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/BackendException'
    put:
      tags:
        - 'user'
      summary: update user
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: 'success update user'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      
        '400':
          description: 'error connection'
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/BackendException'

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "Auth header (Authorization) Access Token"
    bearerRefreshAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "RefreshToken"
  schemas:
    Tokenization:
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        role:
          type: string
          default: user
          enum:
            - "dev"
            - "admin"
            - "manager"
    UserCreate:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          type: string
          default: user
          enum:
            - "dev"
            - "admin"
            - "manager"
    BackendException:
      type: object
      properties:
        error:
          type: string